{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/PageItem.js","webpack:///./node_modules/react-bootstrap/esm/Pagination.js","webpack:///./src/components/pagination.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/components/post-tags.js","webpack:///./src/components/post-card.js","webpack:///./node_modules/react-bootstrap/esm/CardDeck.js","webpack:///./src/components/post-card-deck.js","webpack:///./src/pages/blog/index.js","webpack:///./src/components/seo/Facebook.js","webpack:///./src/components/seo/Twitter.js","webpack:///./src/components/seo/PageType.js","webpack:///./src/utils/GetImageUrl.js","webpack:///./src/utils/GetSchemaOrgAuthor.js","webpack:///./src/components/seo/SchemaOrgType/Article.js","webpack:///./src/components/seo/SchemaOrgType/Blog.js","webpack:///./src/components/seo/SchemaOrgType/BlogPost.js","webpack:///./src/components/seo/SchemaOrgType/SiteNavigationElement.js","webpack:///./src/components/seo/SchemaOrgType/WebPage.js","webpack:///./src/components/seo/SchemaOrgType/WebSite.js","webpack:///./src/components/seo/seo.js","webpack:///./src/components/seo/index.js","webpack:///./src/components/post/Image.js"],"names":["PageItem","forwardRef","_ref","ref","active","disabled","className","style","activeLabel","children","props","Component","SafeAnchor","createElement","defaultProps","displayName","createButton","name","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","Item","BSPagination","state","pager","componentWillMount","this","items","length","setPage","initialPage","componentDidUpdate","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","Array","keys","map","i","render","onClick","index","key","React","p","CardImg","variant","_ref$as","as","prefix","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","PostTags","linkStyle","separator","tags","pathPrefix","Fragment","tag","slug","slugify","toLowerCase","to","PostCard","categories","created","imgName","timeToRead","title","updated","cardClass","cardBodyClass","horizontal","cardButtonClass","verticalPostCard","Image","cardMetaStyle","dangerouslySetInnerHTML","__html","horizontalPostCard","Row","Col","lg","cardTagsStyle","fontSize","data","right","bottom","PostCardDeck","renderPostCards","bind","posts","loopMax","fillCols","elements","post","push","node","id","frontmatter","image","parent","sourceInstanceName","fields","excerpt","columnsSM","columnsMD","columnsLG","columnsXL","CardDeck","BlogIndexPage","blogPostsFeatured","edges","blogPosts","paginateItems","concat","isLoading","componentDidMount","postsFeatured","item","feature","pathname","location","pageType","PageType","BLOG","query","Facebook","articleMeta","property","content","published_time","modified_time","expiration_time","author","section","type","description","locale","url","site","Twitter","username","ARTICLE","BLOGPOST","BREADCRUMB","WEBPAGE","GetImageUrl","useStaticQuery","allImageSharpQuery","allImageSharp","find","edge","fixed","originalName","src","GetSchemaOrgAuthor","siteInformation","siteMetadata","defaultImage","defaultTitle","defaultUrl","logo","Article","JSON","stringify","headline","alternativeHeadline","dateCreated","datePublished","dateModified","language","isFamilyFriendly","copyrightYear","Date","getFullYear","orgName","orgUrl","orgImageUrl","mainEntityOfPage","Blog","BlogPost","SiteNavigationElement","links","link","WebPage","WebSite","keywords","article","SEO","defaultDescription","social","seo","lang","join","facebook","twitter","renderSchemaOrgSwitch","fluid","imgStyle","maxHeight"],"mappings":"oNAYIA,EAAW,IAAMC,YAAW,SAAUC,EAAMC,GAC9C,IAAIC,EAASF,EAAKE,OACdC,EAAWH,EAAKG,SAChBC,EAAYJ,EAAKI,UACjBC,EAAQL,EAAKK,MACbC,EAAcN,EAAKM,YACnBC,EAAWP,EAAKO,SAChBC,EAAQ,YAA8BR,EAAM,CAAC,SAAU,WAAY,YAAa,QAAS,cAAe,aAExGS,EAAYP,GAAUC,EAAW,OAASO,EAAA,EAC9C,OAAoB,IAAMC,cAAc,KAAM,CAC5CV,IAAKA,EACLI,MAAOA,EACPD,UAAW,IAAWA,EAAW,YAAa,CAC5CF,OAAQA,EACRC,SAAUA,KAEE,IAAMQ,cAAcF,EAAW,YAAS,CACtDL,UAAW,YACXD,SAAUA,GACTK,GAAQD,EAAUL,GAAUI,GAA4B,IAAMK,cAAc,OAAQ,CACrFP,UAAW,WACVE,QAELR,EAASc,aA7BU,CACjBV,QAAQ,EACRC,UAAU,EACVG,YAAa,aA2BfR,EAASe,YAAc,WACR,QAEf,SAASC,EAAaC,EAAMC,EAAcC,GAKxC,SAASC,EAAOC,GACd,IAAIZ,EAAWY,EAAMZ,SACjBC,EAAQ,YAA8BW,EAAO,CAAC,aAElD,OAAoB,IAAMR,cAAcb,EAAUU,EAAoB,IAAMG,cAAc,OAAQ,CAChG,cAAe,QACdJ,GAAYS,GAA4B,IAAML,cAAc,OAAQ,CACrEP,UAAW,WACVa,IAIL,YAhBc,IAAVA,IACFA,EAAQF,GAcVG,EAAOL,YAAcE,EACdG,EAGF,IAAIE,EAAQN,EAAa,QAAS,KAC9BO,EAAOP,EAAa,OAAQ,IAAK,YACjCQ,EAAWR,EAAa,WAAY,IAAK,QACzCS,EAAOT,EAAa,OAAQ,KAC5BU,EAAOV,EAAa,OAAQ,KCjDnCW,EAAa,IAAM1B,YAAW,SAAUC,EAAMC,GAChD,IAAIyB,EAAW1B,EAAK0B,SAChBtB,EAAYJ,EAAKI,UACjBG,EAAWP,EAAKO,SAChBoB,EAAO3B,EAAK2B,KACZnB,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,WAAY,SAElF4B,EAAoB,YAAmBF,EAAU,cACrD,OAAoB,IAAMf,cAAc,KAAM,YAAS,CACrDV,IAAKA,GACJO,EAAO,CACRJ,UAAW,IAAWA,EAAWwB,EAAmBD,GAAQC,EAAoB,IAAMD,KACpFpB,MAENkB,EAAWL,MAAQA,EACnBK,EAAWJ,KAAOA,EAClBI,EAAWH,SAAWA,EACtBG,EAAWI,KAAO,EAClBJ,EAAWF,KAAOA,EAClBE,EAAWD,KAAOA,EACH,QClBTM,E,YACJ,WAAYtB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKuB,MAAQ,CAAEC,MAAO,IAFL,E,4CAKnBC,mBAAA,WAEMC,KAAK1B,MAAM2B,OAASD,KAAK1B,MAAM2B,MAAMC,QACvCF,KAAKG,QAAQH,KAAK1B,MAAM8B,c,EAI5BC,mBAAA,SAAmBC,EAAWC,GAExBP,KAAK1B,MAAM2B,QAAUK,EAAUL,OACjCD,KAAKG,QAAQH,KAAK1B,MAAM8B,c,EAI5BD,QAAA,SAAQK,GAAO,IAAD,EACcR,KAAK1B,MAAzB2B,EADM,EACNA,MAAOQ,EADD,EACCA,SACTX,EAAQE,KAAKH,MAAMC,MAEvB,KAAIU,EAAO,GAAKA,EAAOV,EAAMY,YAA7B,CAKAZ,EAAQE,KAAKW,SAASV,EAAMC,OAAQM,EAAMC,GAG1C,IAAIG,EAAcX,EAAMY,MAAMf,EAAMgB,WAAYhB,EAAMiB,SAAW,GAGjEf,KAAKgB,SAAS,CAAElB,MAAOA,IAGvBE,KAAK1B,MAAM2C,aAAaL,K,EAG1BD,SAAA,SAASO,EAAYC,EAAaV,GAEhCU,EAAcA,GAAe,EAG7BV,EAAWA,GAAY,GAGvB,IAEIW,EAAWC,EAFXX,EAAaY,KAAKC,KAAKL,EAAaT,GAGpCC,GAAc,IAEhBU,EAAY,EACZC,EAAUX,GAGNS,GAAe,GACjBC,EAAY,EACZC,EAAU,IACDF,EAAc,GAAKT,GAC5BU,EAAYV,EAAa,EACzBW,EAAUX,IAEVU,EAAYD,EAAc,EAC1BE,EAAUF,EAAc,GAK5B,IAAIL,GAAcK,EAAc,GAAKV,EACjCM,EAAWO,KAAKE,IAAIV,EAAaL,EAAW,EAAGS,EAAa,GAG5DO,EAAQ,YAAIC,MAAML,EAAU,EAAID,GAAWO,QAAQC,KACrD,SAAAC,GAAC,OAAIT,EAAYS,KAInB,MAAO,CACLX,WAAYA,EACZC,YAAaA,EACbV,SAAUA,EACVC,WAAYA,EACZU,UAAWA,EACXC,QAASA,EACTP,WAAYA,EACZC,SAAUA,EACVU,MAAOA,I,EAIXK,OAAA,WAAU,IAAD,OACHhC,EAAQE,KAAKH,MAAMC,MAEvB,OAAKA,EAAM2B,OAAS3B,EAAM2B,MAAMvB,QAAU,EAEjC,KAIP,kBAAC,EAAD,CAAYhC,UAAU,0BACpB,kBAAC,EAAWgB,MAAZ,CACEhB,UAAiC,IAAtB4B,EAAMqB,YAAoB,WAAa,GAClDY,QAAS,kBAAM,EAAK5B,QAAQ,MAE9B,kBAAC,EAAWhB,KAAZ,CACEjB,UAAiC,IAAtB4B,EAAMqB,YAAoB,WAAa,GAClDY,QAAS,kBAAM,EAAK5B,QAAQL,EAAMqB,YAAc,MAEjDrB,EAAM2B,MAAMG,KAAI,SAACpB,EAAMwB,GACtB,OACE,kBAAC,EAAWrC,KAAZ,CACEsC,IAAKD,EACL9D,UAAW4B,EAAMqB,cAAgBX,EAAO,SAAW,GACnDuB,QAAS,kBAAM,EAAK5B,QAAQK,KAE3BA,MAIP,kBAAC,EAAWnB,KAAZ,CACEnB,UAAW4B,EAAMqB,cAAgBrB,EAAMY,WAAa,WAAa,GACjEqB,QAAS,kBAAM,EAAK5B,QAAQL,EAAMqB,YAAc,MAElD,kBAAC,EAAW7B,KAAZ,CACEpB,UAAW4B,EAAMqB,cAAgBrB,EAAMY,WAAa,WAAa,GACjEqB,QAAS,kBAAM,EAAK5B,QAAQL,EAAMY,iB,GAhIjBwB,IAAM3D,WAwIjCqB,EAAalB,aA7IQ,CACnB0B,YAAa,EACbK,SAAU,IA4IGb,O,kICvJC,cACd,OAAO,IAAM/B,YAAW,SAAUsE,EAAGpE,GACnC,OAAoB,IAAMU,cAAc,MAAO,YAAS,GAAI0D,EAAG,CAC7DpE,IAAKA,EACLG,UAAW,IAAWiE,EAAEjE,UAAWA,U,YCCrCkE,EAAU,IAAMvE,YACpB,SAAUC,EAAMC,GACd,IAAIyB,EAAW1B,EAAK0B,SAChBtB,EAAYJ,EAAKI,UACjBmE,EAAUvE,EAAKuE,QACfC,EAAUxE,EAAKyE,GACfhE,OAAwB,IAAZ+D,EAAqB,MAAQA,EACzChE,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,UAAW,OAEjF0E,EAAS,YAAmBhD,EAAU,YAC1C,OAAoB,IAAMf,cAAcF,EAAW,YAAS,CAC1DR,IAAKA,EACLG,UAAW,IAAWmE,EAAUG,EAAS,IAAMH,EAAUG,EAAQtE,IAChEI,OAEL8D,EAAQzD,YAAc,UACtByD,EAAQ1D,aAnBW,CACjB2D,QAAS,MAmBI,QChBXI,EAAgBC,EAAiB,MACjCC,EAAgBD,EAAiB,MACjCE,EAAW,OAAAC,EAAA,GAAmB,aAC9BC,EAAY,OAAAD,EAAA,GAAmB,aAAc,CAC/CtE,UAAWkE,IAETM,EAAe,OAAAF,EAAA,GAAmB,gBAAiB,CACrDtE,UAAWoE,IAETK,EAAW,OAAAH,EAAA,GAAmB,YAAa,CAC7CtE,UAAW,MAET0E,EAAW,OAAAJ,EAAA,GAAmB,YAAa,CAC7CtE,UAAW,MAET2E,EAAa,OAAAL,EAAA,GAAmB,eAChCM,EAAa,OAAAN,EAAA,GAAmB,eAChCO,EAAiB,OAAAP,EAAA,GAAmB,oBAIpCQ,EAAO,IAAMxF,YAAW,SAAUC,EAAMC,GAC1C,IAAIyB,EAAW1B,EAAK0B,SAChBtB,EAAYJ,EAAKI,UACjBoF,EAAKxF,EAAKwF,GACVC,EAAOzF,EAAKyF,KACZC,EAAS1F,EAAK0F,OACdC,EAAO3F,EAAK2F,KACZpF,EAAWP,EAAKO,SAChBiE,EAAUxE,EAAKyE,GACfhE,OAAwB,IAAZ+D,EAAqB,MAAQA,EACzChE,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,KAAM,OAAQ,SAAU,OAAQ,WAAY,OAElH0E,EAAS,YAAmBhD,EAAU,QACtCkE,EAAc,mBAAQ,WACxB,MAAO,CACLC,mBAAoBnB,EAAS,aAE9B,CAACA,IACJ,OAAoB,IAAM/D,cAAcmF,EAAA,EAAYC,SAAU,CAC5DC,MAAOJ,GACO,IAAMjF,cAAcF,EAAW,YAAS,CACtDR,IAAKA,GACJO,EAAO,CACRJ,UAAW,IAAWA,EAAWsE,EAAQc,GAAM,MAAQA,EAAIC,GAAQ,QAAUA,EAAMC,GAAU,UAAYA,KACvGC,EAGJ,IAAMhF,cAAcmE,EAAU,KAAMvE,GAAYA,OAElDgF,EAAK1E,YAAc,OACnB0E,EAAK3E,aAjCc,CACjB+E,MAAM,GAiCRJ,EAAKU,IAAM,EACXV,EAAKW,MAAQlB,EACbO,EAAKY,SAAWlB,EAChBM,EAAKa,KAAOtB,EACZS,EAAKc,KAAOnB,EACZK,EAAKe,KAAOnB,EACZI,EAAKgB,OAASnB,EACdG,EAAKiB,OAASnB,EACdE,EAAKkB,WAAanB,EACH,O,kCCtEf,sEAQMoB,EAAW,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC9C,OACE,kBAAC,IAAMC,SAAP,KACGF,EAAK/C,KAAI,SAACkD,EAAK9C,GACd,IAAM+C,GAAO,IAAIH,EAAJ,SAAuBI,IAAQF,IAAOG,cAKnD,OAJIjD,EAAQ,IAAM2C,EAAKzE,SAErBwE,EAAS,IAGT,0BAAMzC,IAAQ6C,EAAL,IAAY9C,GACnB,kBAAC,IAAD,CAAOK,QAAQ,QACb,kBAAC,OAAD,CAAM6C,GAAIH,EAAM5G,MAAOsG,EAAWvG,UAAS,cAA3C,IACI4G,EAAIG,gBAGTP,QAQEF,MASfA,EAAS9F,aAAe,CACtB+F,UAAW,GACXC,UAAU,MACVC,KAAM,GACNC,WAAY,K,mLClCRO,EAAW,SAAC,GAeZ,EAdJC,WAcK,IAbLC,EAaI,EAbJA,QACAC,EAYI,EAZJA,QACAV,EAWI,EAXJA,WACAG,EAUI,EAVJA,KACAJ,EASI,EATJA,KACApB,EAQI,EARJA,KACAgC,EAOI,EAPJA,WACAC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,cAEAC,GACI,EAFJC,gBAEI,EADJD,YAEME,EACJ,kBAACzC,EAAA,EAAD,CAAMnF,UAAWwH,GACf,kBAAC,OAAD,CAAMR,GAAIH,GACR,kBAAC1B,EAAA,EAAKU,IAAN,CAAUxB,GAAIwD,IAAOT,QAASA,EAASpH,UAAS,aAElD,kBAACmF,EAAA,EAAKa,KAAN,CAAWhG,UAAWyH,GACpB,kBAAC,OAAD,CAAMT,GAAIH,EAAM7G,UAAU,aACxB,kBAACmF,EAAA,EAAKW,MAAN,KAAawB,IAGf,yBAAKrH,MAAO6H,EAAe9H,UAAU,mBACnC,0BAAMA,UAAU,qBACd,kBAAC,IAAD,MADF,IAGGuH,EAAUJ,EAAUI,EAAUJ,GAEjC,0BAAMnH,UAAU,uBACd,kBAAC,IAAD,MADF,IAGGqH,EAHH,gBAKA,0BAAMrH,UAAU,uBACd,kBAAC,IAAD,CAAkB6G,KAAMA,EAAMS,MAAOA,KAEvC,0BAAMtH,UAAU,uBACd,kBAAC,IAAD,MACA,yCACA,kBAAC,IAAD,CAAUyG,KAAMA,EAAMC,WAAYA,MAGtC,kBAACvB,EAAA,EAAKe,KAAN,CACE6B,wBAAyB,CAAEC,OAAQ3C,GACnCrF,UAAW,WAMbiI,EACJ,kBAAC9C,EAAA,EAAD,CAAMnF,UAAWwH,GACf,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,OAAD,CAAMpB,GAAIH,GACR,kBAAC1B,EAAA,EAAKU,IAAN,CACExB,GAAIwD,IACJT,QAASA,EACTpH,UAAW,qBAIjB,kBAACmI,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACjD,EAAA,EAAKa,KAAN,CAAWhG,UAAW,gBAAkByH,GACtC,kBAACtC,EAAA,EAAKW,MAAN,KACE,kBAAC,OAAD,CAAMkB,GAAIH,EAAM7G,UAAU,aACvBsH,IAIL,yBAAKrH,MAAO6H,EAAe9H,UAAU,mBACnC,0BAAMA,UAAU,qBACd,kBAAC,IAAD,MADF,IAGGuH,EAAUJ,EAAUI,EAAUJ,GAEjC,0BAAMnH,UAAU,uBACd,kBAAC,IAAD,MADF,IAGGqH,EAHH,gBAKA,0BAAMrH,UAAU,uBACd,kBAAC,IAAD,CAAkB6G,KAAMA,EAAMS,MAAOA,MAGzC,kBAACnC,EAAA,EAAKe,KAAN,CACE7B,GAAG,MACH0D,wBAAyB,CAAEC,OAAQ3C,GACnCrF,UAAW,YAMnB,kBAACmF,EAAA,EAAKiB,OAAN,CAAapG,UAAU,oCACrB,0BACEC,MAAOoI,EACPrI,UAAU,yCAEV,kBAAC,IAAD,CACEyG,KAAMA,EACNC,WAAYA,EACZF,UAAS,IACTD,UAAW,CAAE+B,SAAS,aAMhC,OACE,kBAAC,IAAM3B,SAAP,KACGe,EAAaO,EAAqBL,IAK1BX,IAYfA,EAASzG,aAAe,CACtB+H,KAAM,GACNnB,QAAS,GACTP,KAAM,GACNxB,KAAM,GACNiC,MAAO,GACPG,cAAe,GACfE,gBAAiB,IAGnB,IAAMG,EAAgB,CACpBQ,SAAS,SAGLD,EAAgB,CACpBG,MAAM,IACNC,OAAO,W,YC9JM,SAAA9D,EAAA,GAAmB,aC8B5B+D,E,YACJ,WAAYtI,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKuB,MAAQ,GAGb,EAAKgH,gBAAkB,EAAKA,gBAAgBC,KAArB,gBANN,E,4CASnBD,gBAAA,WAWE,IAVA,IAAIlB,EAAgB3F,KAAK1B,MAAMqH,cAC3BE,EAAkB7F,KAAK1B,MAAMuH,gBAC7BH,EAAY1F,KAAK1B,MAAMoH,UACvBqB,EAAQ/G,KAAK1B,MAAM2B,MACnB+G,EAAUhH,KAAK1B,MAAM2I,SACU,GAA/B3F,KAAKC,KAAKwF,EAAM7G,OAAS,IACzB6G,EAAM7G,OACN0F,EAAa5F,KAAK1B,MAAMsH,WAExBsB,EAAW,GACNrF,EAAI,EAAGA,GAAKmF,EAASnF,IAAK,CACjC,IAAIsF,EAAOJ,EAAMlF,EAAI,QAED,IAATsF,EACTD,EAASE,KAAK,kBAAC/D,EAAA,EAAD,CAAMpB,IAAKJ,EAAG1D,MAAO,CAAEqF,OAAQ,WAE7C0D,EAASE,KACP,kBAAC,EAAD,CACEnF,IAAKkF,EAAKE,KAAKC,GACflC,WAAY+B,EAAKE,KAAKE,YAAYnC,WAClCC,QAAS8B,EAAKE,KAAKE,YAAYlC,QAC/BC,QAAS6B,EAAKE,KAAKE,YAAYC,MAC/B5C,WAAYuC,EAAKE,KAAKI,OAAOC,mBAC7B3C,KAAMoC,EAAKE,KAAKM,OAAO5C,KACvBJ,KAAMwC,EAAKE,KAAKE,YAAY5C,KAC5BpB,KAAM4D,EAAKE,KAAKO,QAChBrC,WAAY4B,EAAKE,KAAK9B,WACtBC,MAAO2B,EAAKE,KAAKE,YAAY/B,MAC7BC,QAAS0B,EAAKE,KAAKE,YAAY9B,QAC/BC,UAAWA,EACXC,cAAeA,EACfE,gBAAiBA,EACjBD,WAAYA,KAKd/D,EAAI7B,KAAK1B,MAAMuJ,WAAc,GAC/BX,EAASE,KACP,yBACEnF,IAAK,gBAAkBJ,EACvB3D,UAAU,uCAIZ2D,EAAI7B,KAAK1B,MAAMwJ,WAAc,GAC/BZ,EAASE,KACP,yBACEnF,IAAK,gBAAkBJ,EACvB3D,UAAU,uCAIZ2D,EAAI7B,KAAK1B,MAAMyJ,WAAc,GAC/Bb,EAASE,KACP,yBACEnF,IAAK,gBAAkBJ,EACvB3D,UAAU,uCAIZ2D,EAAI7B,KAAK1B,MAAM0J,WAAc,GAC/Bd,EAASE,KACP,yBACEnF,IAAK,gBAAkBJ,EACvB3D,UAAU,6BAKlB,OAAOgJ,G,EAGTpF,OAAA,WACE,OACE,kBAACsE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC4B,EAAD,KAAWjI,KAAK6G,sB,GAxFC3E,IAAM3D,WAgGjCqI,EAAalI,aA5GQ,CACnBiH,cAAe,GACfE,gBAAiB,GACjBH,UAAW,GACXmC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXf,UAAU,EACVrB,YAAY,GAoGCgB,O,kKCrHTsB,E,YACJ,WAAY5J,GAAQ,IAAD,EAGb6J,GAFJ,cAAM7J,IAAN,MAE6BA,MAAMmI,KAAK0B,kBAAkBC,MACtDC,EAAY,EAAK/J,MAAMmI,KAAK4B,UAAUD,MACtCE,EAAgB,GAAGC,OAAOJ,EAAmBE,GALhC,OAOjB,EAAKxI,MAAQ,CACX2I,WAAW,EACXF,cAAeA,EACf1H,YAAa,IAIf,EAAKK,aAAe,EAAKA,aAAa6F,KAAlB,gBAdH,E,4CAiBnB2B,kBAAA,WACEzI,KAAKgB,SAAS,CAAEwH,WAAW,K,EAG7BvH,aAAA,SAAaL,GAEXZ,KAAKgB,SAAS,CAAEJ,YAAaA,K,EAG/BkB,OAAA,WAKE,IAHA,IAAM4G,EAAgB,GAChB3B,EAAQ,GAELlF,EAAI,EAAGA,EAAI7B,KAAKH,MAAMe,YAAYV,OAAQ2B,IAAM,CACvD,IAAI8G,EAAO3I,KAAKH,MAAMe,YAAYiB,GAE/B8G,EAAKtB,KAAKE,YAAYqB,QACvBF,EAActB,KAAKuB,GAEnB5B,EAAMK,KAAKuB,GAIf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,SAAU7I,KAAK1B,MAAMwK,SAASD,SAC9BE,SAAUC,IAASC,KACnBzD,MAAM,SAER,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAcvF,MAAOyI,EAAehD,UAAW,cAAeG,gBAAiB,mDAG/E,kBAAC,IAAD,CAAc5F,MAAO8G,EAAOc,UAAW,EAAGC,UAAW,EAAGC,UAAW,EAAGC,UAAW,EAAGtC,UAAW,cAAeC,cAAe,qBAAsBE,gBAAiB,UAAWoB,UAAQ,IAErLjH,KAAKH,MAAM2I,UAAa,8BAAU,kBAAC,IAAD,CAAYvI,MAAOD,KAAKH,MAAMyI,cAAerH,aAAcjB,KAAKiB,kB,GAxDlFiB,IAAM3D,WA+DnB,mBAAAD,GAAK,OAClB,kBAAC,cAAD,CACE4K,MAAK,YA0ELpH,OAAS,SAAA2E,GAAI,OAAI,kBAACyB,EAAD,eAAezB,KAAMA,GAAUnI,S,8HCvH9C6K,EAAW,SAAC7K,GAEhB,IAAM8K,EACJ,oCACE,0BAAMC,SAAS,yBAAyBC,QAAShL,EAAMiL,iBACtDjL,EAAMkL,eAAiB,0BAAMH,SAAS,wBAAwBC,QAAShL,EAAMkL,gBAC7ElL,EAAMmL,iBAAmB,0BAAMJ,SAAS,0BAA0BC,QAAShL,EAAMmL,kBAClF,0BAAMJ,SAAS,iBAAiBC,QAAShL,EAAMoL,SAC/C,0BAAML,SAAS,kBAAkBC,QAAShL,EAAMqL,UAChD,0BAAMN,SAAS,cAAcC,QAAShL,EAAMqG,QAIhD,OACE,kBAAC,IAAD,KAEE,0BAAM0E,SAAS,UAAUC,QAAShL,EAAMsL,OACxC,0BAAMP,SAAS,WAAWC,QAAShL,EAAMkH,QACzC,0BAAM6D,SAAS,iBAAiBC,QAAShL,EAAMuL,cAC/C,0BAAMR,SAAS,WAAWC,QAAShL,EAAMkJ,QACzC,0BAAM6B,SAAS,eAAeC,QAAShL,EAAMuL,cAC7C,0BAAMR,SAAS,YAAYC,QAAShL,EAAMwL,SAC1C,0BAAMT,SAAS,SAASC,QAAShL,EAAMyL,MACvC,0BAAMV,SAAS,eAAeC,QAAShL,EAAM0L,OAC7B,YAAf1L,EAAMsL,KAAqBR,EAAc,OAMhDD,EAASzK,aAzCY,CACnBgL,OAAO,GACPD,gBAAiB,KACjBK,OAAO,QACPN,cAAe,KACfD,eAAgB,KAChBI,QAAQ,GACRhF,KAAM,GACNiF,KAAK,WAkCQT,QC3CTc,EAAU,SAAC3L,GACf,OACE,kBAAC,IAAD,KACE,0BAAMO,KAAK,eAAeyK,QAAShL,EAAMsL,OACzC,0BAAM/K,KAAK,eAAeyK,QAAO,IAAMhL,EAAM0L,OAC5C1L,EAAM4L,UAAY,0BAAMrL,KAAK,kBAAkByK,QAAO,IAAMhL,EAAM4L,WACnE,0BAAMrL,KAAK,gBAAgByK,QAAShL,EAAMkH,QAC1C,0BAAM3G,KAAK,sBAAsByK,QAAShL,EAAMuL,cAChD,0BAAMhL,KAAK,gBAAgByK,QAAShL,EAAMkJ,UAMhDyC,EAAQvL,aApBa,CACnBkL,KAAK,sBACLM,SAAU,MAmBGD,QClCFjB,EAAW,CACtBmB,QAAS,UACTlB,KAAM,OACNmB,SAAU,WACVC,WAAY,aACZC,QAAS,WCHJ,SAASC,EAAYjF,GAC1B,IACMkC,EADOgD,yBAAeC,GACTC,cAActC,MAAMuC,MACrC,SAAAC,GAAI,OAAIA,EAAKvD,KAAKwD,MAAMC,eAAiBxF,KAE3C,GAAKkC,EAGL,OAAOA,EAAMH,KAAKwD,MAAME,IAG1B,IAAMN,EAAkB,aCVjB,SAASO,EAAmBtB,GACjC,IADyC,EAC5Bc,yBAAeS,GAInBjB,KADPkB,aAAgBC,EAJuB,EAIvBA,aAAcC,EAJS,EAITA,aAAcC,EAJL,EAIKA,WAG9C,OAAI3B,EACK,CACL,QAAS,SACT7K,KAAK,GAAI6K,GAIJ,CACL,QAAS,eACT7K,KAAK,GAAIuM,EACTrB,IAAI,GAAIsB,EACRC,KAAM,CACJ,QAAS,cACTvB,IAAI,GAAIsB,EAAad,EAAYY,KAMzC,IAAMF,EAAe,aCEfM,EAAU,SAACjN,GACf,OACE,oCACE,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAY,oBACZ,QAAS,UACT,KAAO,GAAInN,EAAMoN,SACjB,YAAc,GAAIpN,EAAMuL,YACxB,MAAQ,GAAIvL,EAAMkJ,MAClB,IAAM,GAAIlJ,EAAMyL,IAChB,SAAW,GAAIzL,EAAMoN,SACrB,oBAAsB,GAAIpN,EAAMqN,oBAChC,YAAc,GAAIrN,EAAMsN,YACxB,cAAgB,GAAItN,EAAMuN,cAC1B,aAAe,GAAIvN,EAAMwN,aACzB,WAAa,GAAIxN,EAAMyN,SACvB,iBAAmB,GAAIzN,EAAM0N,iBAC7BC,cAAc,IAAI,IAAIC,MAAOC,cAE7BzC,OAAQsB,EAAmB1M,EAAMoL,QACjC,UAAa,CACX,QAAS,eACT,KAAO,GAAIpL,EAAM8N,QACjB,IAAM,GAAI9N,EAAM+N,OAChB,KAAQ,CACN,QAAS,cACT,IAAM,GAAI/N,EAAMgO,cAGpB,iBAAmB,GAAIhO,EAAMiO,uBAU3ChB,EAAQ7M,aAjDa,CACnBiN,oBAAoB,GACpBjC,OAAO,GACPsC,kBAAkB,EAClBD,SAAS,SA8CIR,QC3CTiB,EAAO,SAAClO,GACZ,OACE,oCACE,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAY,oBACZ,QAAS,OACT,KAAO,GAAInN,EAAMoN,SACjB,YAAc,GAAIpN,EAAMuL,YACxB,MAAQ,GAAIvL,EAAMkJ,MAClB,IAAM,GAAIlJ,EAAMyL,IAChB,SAAW,GAAIzL,EAAMoN,SACrB,oBAAsB,GAAIpN,EAAMqN,oBAIhC,WAAa,GAAIrN,EAAMyN,SACvB,iBAAmB,GAAIzN,EAAM0N,iBAC7BC,cAAc,IAAI,IAAIC,MAAOC,cAE7BzC,OAAQsB,EAAmB1M,EAAMoL,QACjC,UAAa,CACX,QAAS,eACT,KAAO,GAAIpL,EAAM8N,QACjB,IAAM,GAAI9N,EAAM+N,OAChB,KAAQ,CACN,QAAS,cACT,IAAM,GAAI/N,EAAMgO,cAGpB,iBAAmB,GAAIhO,EAAMiO,uBAU3CC,EAAK9N,aAjDgB,CACnBiN,oBAAoB,GACpBjC,OAAO,GACPsC,kBAAkB,EAClBD,SAAS,SA8CIS,QC3CTC,EAAW,SAACnO,GAChB,OACE,oCACE,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAW,oBACX,QAAS,cACT,KAAO,GAAInN,EAAMO,KACjB,YAAc,GAAIP,EAAMuL,YACxB,MAAQ,GAAIvL,EAAMkJ,MAClB,IAAM,GAAIlJ,EAAMyL,IAChB,SAAW,GAAIzL,EAAMoN,SACrB,oBAAsB,GAAIpN,EAAMqN,oBAChC,YAAc,GAAIrN,EAAMuN,cACxB,cAAgB,GAAIvN,EAAMuN,cAC1B,aAAe,GAAIvN,EAAMwN,aACzB,WAAa,GAAIxN,EAAMyN,SACvB,iBAAmB,GAAIzN,EAAM0N,iBAC7B,cAAgB,IAAI,IAAIE,MAAOC,cAM/B,OAAUnB,EAAmB1M,EAAMoL,QACnC,UAAa,CACX,QAAS,eACT,KAAO,GAAIpL,EAAM8N,QACjB,IAAM,GAAI9N,EAAM+N,OAChB,KAAQ,CACN,QAAS,cACT,IAAM,GAAI/N,EAAMgO,cAYpB,iBAAmB,GAAIhO,EAAMiO,uBAmB3CE,EAAS/N,aAvEY,CACnBiN,oBAAoB,GACpBjC,OAAO,GACPsC,kBAAkB,EAClBD,SAAS,SAoEIU,QC5ETC,EAAwB,SAACpO,GAC7B,OACE,oCACA,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAY,qBACZ,SACA,CACEnN,EAAMqO,MAAM/K,KAAI,SAACgL,EAAM5K,GACrB,MACE,CACE,WAAY,qBACZ,QAAQ,wBACR,MAAS1D,EAAMyL,IAAf,cACA,KAAO,GAAI6C,EAAK/N,KAChB,IAAM,GAAIP,EAAMyL,IAAM6C,EAAKA,gBAc/CF,EAAsBhO,aApCD,CACnBiO,MAAO,GACP5C,IAAI,IAmCS2C,QCrBTG,EAAU,SAACvO,GACf,OACE,oCACE,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAY,oBACZ,QAAS,UACT,KAAO,GAAInN,EAAMoN,SACjB,YAAc,GAAIpN,EAAMuL,YACxB,MAAQ,GAAIvL,EAAMkJ,MAClB,IAAM,GAAIlJ,EAAMyL,IAChB,SAAW,GAAIzL,EAAMoN,SACrB,oBAAsB,GAAIpN,EAAMqN,oBAIhC,WAAa,GAAIrN,EAAMyN,SACvB,iBAAmB,GAAIzN,EAAM0N,iBAC7BC,cAAc,IAAI,IAAIC,MAAOC,cAE7BzC,OAAQsB,EAAmB1M,EAAMoL,QACjC,UAAa,CACX,QAAS,eACT,KAAO,GAAIpL,EAAM8N,QACjB,IAAM,GAAI9N,EAAM+N,OAChB,KAAQ,CACN,QAAS,cACT,IAAM,GAAI/N,EAAMgO,cAGpB,iBAAmB,GAAIhO,EAAMiO,uBAU3CM,EAAQnO,aAjDa,CACnBiN,oBAAoB,GACpBjC,OAAO,GACPsC,kBAAkB,EAClBD,SAAS,SA8CIc,QC5DTC,EAAU,SAACxO,GACf,OACE,oCACA,kBAAC,IAAD,KACE,4BAAQsL,KAAK,uBACV4B,KAAKC,UACJ,CACE,WAAY,oBACZ,QAAS,UACT,KAAO,GAAInN,EAAMO,KACjB,IAAM,GAAIP,EAAMyL,UAU5B+C,EAAQpO,aAzBa,CACnBG,KAAK,GACLkL,IAAI,IAwBS+C,QCoBTpO,EAAe,CACnBgL,OAAO,GACPG,YAAY,GACZrC,MAAM,GACNuF,SAAU,GACV1F,KAAM,GACNwB,SAAS,GACTE,SAAUC,EAASsB,QACnB9E,MAAM,GACNwH,SAAS,GAGLC,EAAM,SAAC3O,GAAW,IAAD,EAajBA,EAAMmI,KAAKuD,KAVbkB,aACEgC,EAJiB,EAIjBA,mBACA/B,EALiB,EAKjBA,aACAC,EANiB,EAMjBA,aACAC,EAPiB,EAOjBA,WACAU,EARiB,EAQjBA,SACAY,EATiB,EASjBA,MACAQ,EAViB,EAUjBA,OACApD,EAXiB,EAWjBA,IAIEqD,EAAM,CACVvD,YAAavL,EAAMuL,aAAeqD,EAClC1F,MAAOlJ,EAAMkJ,OAAS2D,EACtB3F,MAAOlH,EAAMkH,MAAWlH,EAAMkH,MAAvB,MAAkC4F,EAAoBA,EAAtD,MAAwE8B,EAC/EnD,IAAI,GAAIA,GAAMzL,EAAMuK,UAAY,KA6ElC,OACE,oCACE,kBAAC,IAAD,KACE,+BAAQuE,EAAI5H,OACZ,0BAAM6H,KAAMtB,IACZ,0BAAMlN,KAAK,cAAcyK,QAAS8D,EAAIvD,cACtC,0BAAMhL,KAAK,QAAQyK,QAAO,GAAKS,EAAMQ,EAAY6C,EAAI5F,SACpDlJ,EAAMyO,SAAS7M,OAAS,EAAI,0BAAMrB,KAAK,WAAWyK,QAAShL,EAAMyO,SAASO,KAAf,QAAgC,IAG9F,kBAAC,EAAD,CACEzD,YAAauD,EAAIvD,YACjBrC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChCsC,OAAQqD,EAAOI,SAASxB,SACxB/B,KAAMmD,EAAOI,SAAS1O,KACtB2G,MAAO4H,EAAI5H,MACXoE,KAAMtL,EAAM0O,QAAU,UAAY,UAClCjD,IAAKqD,EAAIrD,MAGX,kBAAC,EAAD,CACEF,YAAauD,EAAIvD,YACjBrC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChCwC,KAAMmD,EAAOK,QAAQxD,KACrBxE,MAAO4H,EAAI5H,QAGb,kBAAC,EAAD,CAAS3G,KAAMuM,EAAcrB,IAAKsB,IAClC,kBAAC,EAAD,CAAuBsB,MAAOA,EAAO5C,IAAKsB,IAtGhB,SAACtC,GAC7B,OAAOA,GACL,KAAKC,EAASmB,QACZ,OACE,kBAAC,EAAD,CACEyB,YAAatN,EAAMsN,YACnBE,aAAcxN,EAAMwN,aACpBD,cAAevN,EAAMuN,cACrBhC,YAAauD,EAAIvD,YACjB6B,SAAU0B,EAAI5H,MACdgC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChC+E,iBAAkBa,EAAIrD,IACtBlL,KAAMuO,EAAI5H,MACV8G,YAAW,GAAKvC,EAAMQ,EAAYY,GAClCiB,QAAShB,EACTiB,OAAQhB,EACRtB,IAAKqD,EAAIrD,MAGf,KAAKf,EAASC,KACZ,OACE,kBAAC,EAAD,CAIEY,YAAauD,EAAIvD,YACjB6B,SAAU0B,EAAI5H,MACdgC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChC+E,iBAAkBa,EAAIrD,IACtBlL,KAAMuO,EAAI5H,MACV8G,YAAW,GAAKvC,EAAMQ,EAAYY,GAClCiB,QAAShB,EACTiB,OAAQhB,EACRtB,IAAKqD,EAAIrD,MAGf,KAAKf,EAASoB,SACZ,OACE,kBAAC,EAAD,CACEwB,YAAatN,EAAMsN,YACnBE,aAAcxN,EAAMwN,aACpBD,cAAevN,EAAMuN,cACrBhC,YAAauD,EAAIvD,YACjB6B,SAAU0B,EAAI5H,MACdgC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChC+E,iBAAkBa,EAAIrD,IACtBlL,KAAMuO,EAAI5H,MACV8G,YAAW,GAAKvC,EAAMQ,EAAYY,GAClCiB,QAAShB,EACTiB,OAAQhB,EACRtB,IAAKqD,EAAIrD,MAGf,QACE,OACE,kBAAC,EAAD,CAIEF,YAAauD,EAAIvD,YACjB6B,SAAU0B,EAAI5H,MACdgC,MAAK,GAAKuC,EAAMQ,EAAY6C,EAAI5F,OAChC+E,iBAAkBa,EAAIrD,IACtBlL,KAAMuO,EAAI5H,MACV8G,YAAW,GAAKvC,EAAMQ,EAAYY,GAClCiB,QAAShB,EACTiB,OAAQhB,EACRtB,IAAKqD,EAAIrD,OAoCd0D,CAAsBnP,EAAMyK,YAMnCkE,EAAIvO,aAAeA,EACJ,IAOTwK,EAAK,aClMI+D,ID2LA,SAAA3O,GAAK,OAClB,kBAAC,cAAD,CACE4K,MAAOA,EACPpH,OAAQ,SAAA2E,GAAI,OAAI,kBAAC,EAAD,eAAKA,KAAMA,GAAUnI,S,kCE1MzC,0DAMMyH,EAAQ,SAAC,GAAD,IAAG7H,EAAH,EAAGA,UAAWoH,EAAd,EAAcA,QAAd,OACZ,kBAAC,cAAD,CACE4D,MAAK,aAcLpH,OAAQ,SAAA2E,GACN,IAAMe,EAAQf,EAAKiE,cAActC,MAAMuC,MACrC,SAAAC,GAAI,OAAIA,EAAKvD,KAAKqG,MAAM5C,eAAiBxF,KAE3C,OAAKkC,EAIH,kBAAC,IAAD,CACEkG,MAAOlG,EAAMH,KAAKqG,MAClBxP,UAAW,UAAYA,EACvBC,MAAOwP,IANF,SAYA5H,MAMfA,EAAMrH,aAAe,CACnB4G,QAAS,IAGX,IAAMqI,EAAW,CACfC,UAAU","file":"component---src-pages-blog-index-js-c8fbabb9591b89b3576e.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n/* eslint-disable react/no-multi-comp */\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\n\nvar Pagination = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Pagination } from \"react-bootstrap\"\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number,\n}\n\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 10,\n}\n\nclass BSPagination extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { pager: {} }\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage)\n    }\n  }\n\n  setPage(page) {\n    var { items, pageSize } = this.props\n    var pager = this.state.pager\n\n    if (page < 1 || page > pager.totalPages) {\n      return\n    }\n\n    // get new pager object for specified page\n    pager = this.getPager(items.length, page, pageSize)\n\n    // get new page of items from items array\n    var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1)\n\n    // update state\n    this.setState({ pager: pager })\n\n    // call change page function in parent component\n    this.props.onChangePage(pageOfItems)\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1\n\n    // default page size is 10\n    pageSize = pageSize || 10\n\n    // calculate total pages\n    var totalPages = Math.ceil(totalItems / pageSize)\n\n    var startPage, endPage\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1\n      endPage = totalPages\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1\n        endPage = 10\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9\n        endPage = totalPages\n      } else {\n        startPage = currentPage - 5\n        endPage = currentPage + 4\n      }\n    }\n\n    // calculate start and end item indexes\n    var startIndex = (currentPage - 1) * pageSize\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1)\n\n    // create an array of pages to ng-repeat in the pager control\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(\n      i => startPage + i\n    )\n\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages,\n    }\n  }\n\n  render() {\n    var pager = this.state.pager\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null\n    }\n\n    return (\n      <Pagination className=\"justify-content-center\">\n        <Pagination.First\n          className={pager.currentPage === 1 ? \"disabled\" : \"\"}\n          onClick={() => this.setPage(1)}\n        />\n        <Pagination.Prev\n          className={pager.currentPage === 1 ? \"disabled\" : \"\"}\n          onClick={() => this.setPage(pager.currentPage - 1)}\n        />\n        {pager.pages.map((page, index) => {\n          return (\n            <Pagination.Item\n              key={index}\n              className={pager.currentPage === page ? \"active\" : \"\"}\n              onClick={() => this.setPage(page)}\n            >\n              {page}\n            </Pagination.Item>\n          )\n        })}\n        <Pagination.Next\n          className={pager.currentPage === pager.totalPages ? \"disabled\" : \"\"}\n          onClick={() => this.setPage(pager.currentPage + 1)}\n        />\n        <Pagination.Last\n          className={pager.currentPage === pager.totalPages ? \"disabled\" : \"\"}\n          onClick={() => this.setPage(pager.totalPages)}\n        />\n      </Pagination>\n    )\n  }\n}\n\nBSPagination.propTypes = propTypes\nBSPagination.defaultProps = defaultProps\nexport default BSPagination\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport slugify from \"slugify\"\n\nimport { Link } from \"gatsby\"\nimport { Badge } from \"react-bootstrap\"\n\nconst PostTags = ({ linkStyle, separator, tags, pathPrefix }) => {\n  return (\n    <React.Fragment>\n      {tags.map((tag, index) => {\n        const slug = `/${pathPrefix}/tags/${slugify(tag)}`.toLowerCase()\n        if (index + 1 === tags.length) {\n          // Check if item is last in array\n          separator = ``\n        }\n        return (\n          <span key={`${tag}-${index}`}>\n            <Badge variant=\"info\">\n              <Link to={slug} style={linkStyle} className={`text-white`}>\n                #{tag.toLowerCase()}\n              </Link>\n            </Badge>\n            {separator}\n          </span>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nexport default PostTags\n\nPostTags.propTypes = {\n  linkStyle: PropTypes.object,\n  separator: PropTypes.string,\n  tags: PropTypes.array,\n  pathPrefix: PropTypes.string,\n}\n\nPostTags.defaultProps = {\n  linkStyle: {},\n  separator: ` | `,\n  tags: [],\n  pathPrefix: \"\",\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link } from \"gatsby\"\nimport Image from \"components/post/Image\"\nimport { Card, Row, Col } from \"react-bootstrap\"\nimport { FaRegCalendarAlt, FaRegClock, FaTags } from \"react-icons/fa\"\n// import PostCategories from \"components/post-categories\"\nimport PostCommentCount from \"components/post-comment-count\"\nimport PostTags from \"components/post-tags\"\n\nconst PostCard = ({\n  categories,\n  created,\n  imgName,\n  pathPrefix,\n  slug,\n  tags,\n  text,\n  timeToRead,\n  title,\n  updated,\n  cardClass,\n  cardBodyClass,\n  cardButtonClass,\n  horizontal,\n}) => {\n  const verticalPostCard = (\n    <Card className={cardClass}>\n      <Link to={slug}>\n        <Card.Img as={Image} imgName={imgName} className={`fade-in`} />\n      </Link>\n      <Card.Body className={cardBodyClass}>\n        <Link to={slug} className=\"text-dark\">\n          <Card.Title>{title}</Card.Title>\n        </Link>\n        {/* <Card.Subtitle>Card Subtitle</Card.Subtitle> */}\n        <div style={cardMetaStyle} className=\"my-1 text-muted\">\n          <span className=\"mr-2 d-line-block\">\n            <FaRegCalendarAlt />\n            &nbsp;\n            {updated > created ? updated : created}\n          </span>\n          <span className=\"mr-2 d-inline-block\">\n            <FaRegClock />\n            &nbsp;\n            {timeToRead} minute read\n          </span>\n          <span className=\"mr-2 d-inline-block\">\n            <PostCommentCount slug={slug} title={title} />\n          </span>\n          <span className=\"mr-2 d-inline-block\">\n            <FaTags />\n            <span>&nbsp;Tags:&nbsp;</span>\n            <PostTags tags={tags} pathPrefix={pathPrefix} />\n          </span>\n        </div>\n        <Card.Text\n          dangerouslySetInnerHTML={{ __html: text }}\n          className={\"my-3\"}\n        ></Card.Text>\n        {/* <Button variant=\"dark\" as={Link} to={slug} type=\"null\" className={cardButtonClass}>read more</Button> */}\n      </Card.Body>\n    </Card>\n  )\n  const horizontalPostCard = (\n    <Card className={cardClass}>\n      <Row>\n        <Col lg={6}>\n          <Link to={slug}>\n            <Card.Img\n              as={Image}\n              imgName={imgName}\n              className={\"m-lg-4 fade-in\"}\n            />\n          </Link>\n        </Col>\n        <Col lg={6}>\n          <Card.Body className={`m-lg-4 p-lg-0` + cardBodyClass}>\n            <Card.Title>\n              <Link to={slug} className=\"text-dark\">\n                {title}\n              </Link>\n            </Card.Title>\n            {/* <Card.Subtitle>Card Subtitle</Card.Subtitle> */}\n            <div style={cardMetaStyle} className=\"my-1 text-muted\">\n              <span className=\"mr-2 d-line-block\">\n                <FaRegCalendarAlt />\n                &nbsp;\n                {updated > created ? updated : created}\n              </span>\n              <span className=\"mr-2 d-inline-block\">\n                <FaRegClock />\n                &nbsp;\n                {timeToRead} minute read\n              </span>\n              <span className=\"mr-2 d-inline-block\">\n                <PostCommentCount slug={slug} title={title} />\n              </span>\n            </div>\n            <Card.Text\n              as=\"div\"\n              dangerouslySetInnerHTML={{ __html: text }}\n              className={\"my-3\"}\n            ></Card.Text>\n            {/* <Button variant=\"dark\" as={Link} to={slug} type=\"null\" className={cardButtonClass}>read more</Button> */}\n          </Card.Body>\n        </Col>\n      </Row>\n      <Card.Footer className=\"text-muted bg-white border-0 p-0\">\n        <span\n          style={cardTagsStyle}\n          className=\"mr-3 d-inline-block position-absolute\"\n        >\n          <PostTags\n            tags={tags}\n            pathPrefix={pathPrefix}\n            separator={` `}\n            linkStyle={{ fontSize: `1rem` }}\n          />\n        </span>\n      </Card.Footer>\n    </Card>\n  )\n  return (\n    <React.Fragment>\n      {horizontal ? horizontalPostCard : verticalPostCard}\n    </React.Fragment>\n  )\n}\n\nexport default PostCard\n\nPostCard.propTypes = {\n  data: PropTypes.string,\n  imgName: PropTypes.string,\n  slug: PropTypes.string,\n  text: PropTypes.string,\n  title: PropTypes.string,\n  cardBodyClass: PropTypes.string,\n  cardButtonClass: PropTypes.string,\n}\n\nPostCard.defaultProps = {\n  data: \"\",\n  imgName: \"\",\n  slug: \"\",\n  text: \"\",\n  title: \"\",\n  cardBodyClass: \"\",\n  cardButtonClass: \"\",\n}\n\nconst cardMetaStyle = {\n  fontSize: `.8rem`,\n}\n\nconst cardTagsStyle = {\n  right: `0`,\n  bottom: `-0.8rem`,\n}\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-deck');","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport PostCard from \"components/post-card\"\nimport { CardDeck, Card, Row, Col } from \"react-bootstrap\"\n\nconst propTypes = {\n  cardBodyClass: PropTypes.string,\n  cardButtonClass: PropTypes.string,\n  cardClass: PropTypes.string,\n  columnsSM: PropTypes.number,\n  columnsMD: PropTypes.number,\n  columnsLG: PropTypes.number,\n  columnsXL: PropTypes.number,\n  fillCols: PropTypes.bool,\n  items: PropTypes.array.isRequired,\n  horizontal: PropTypes.bool,\n}\n\nconst defaultProps = {\n  cardBodyClass: \"\",\n  cardButtonClass: \"\",\n  cardClass: \"\",\n  columnsSM: 1,\n  columnsMD: 1,\n  columnsLG: 1,\n  columnsXL: 1,\n  fillCols: false,\n  horizontal: false,\n}\n\nclass PostCardDeck extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n\n    // bind function(s) in constructor instead of render\n    this.renderPostCards = this.renderPostCards.bind(this)\n  }\n\n  renderPostCards() {\n    var cardBodyClass = this.props.cardBodyClass\n    var cardButtonClass = this.props.cardButtonClass\n    var cardClass = this.props.cardClass\n    var posts = this.props.items\n    var loopMax = this.props.fillCols\n      ? Math.ceil(posts.length / 10) * 10\n      : posts.length\n    var horizontal = this.props.horizontal\n\n    var elements = []\n    for (var i = 1; i <= loopMax; i++) {\n      var post = posts[i - 1]\n\n      if (typeof post === \"undefined\") {\n        elements.push(<Card key={i} style={{ border: \"none\" }}></Card>)\n      } else {\n        elements.push(\n          <PostCard\n            key={post.node.id}\n            categories={post.node.frontmatter.categories}\n            created={post.node.frontmatter.created}\n            imgName={post.node.frontmatter.image}\n            pathPrefix={post.node.parent.sourceInstanceName}\n            slug={post.node.fields.slug}\n            tags={post.node.frontmatter.tags}\n            text={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            title={post.node.frontmatter.title}\n            updated={post.node.frontmatter.updated}\n            cardClass={cardClass}\n            cardBodyClass={cardBodyClass}\n            cardButtonClass={cardButtonClass}\n            horizontal={horizontal}\n          />\n        )\n      }\n\n      if (i % this.props.columnsSM === 0) {\n        elements.push(\n          <div\n            key={`col-sm-every-` + i}\n            className=\"w-100 d-none d-sm-block d-md-none\"\n          ></div>\n        ) // <!-- wrap every 2 on sm-->\n      }\n      if (i % this.props.columnsMD === 0) {\n        elements.push(\n          <div\n            key={`col-md-every-` + i}\n            className=\"w-100 d-none d-md-block d-lg-none\"\n          ></div>\n        ) // <!-- wrap every 3 on md-->\n      }\n      if (i % this.props.columnsLG === 0) {\n        elements.push(\n          <div\n            key={`col-lg-every-` + i}\n            className=\"w-100 d-none d-lg-block d-xl-none\"\n          ></div>\n        ) // <!-- wrap every 4 on lg-->\n      }\n      if (i % this.props.columnsXL === 0) {\n        elements.push(\n          <div\n            key={`col-xl-every-` + i}\n            className=\"w-100 d-none d-xl-block\"\n          ></div>\n        ) // <!-- wrap every 5 on xl-->\n      }\n    }\n    return elements\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <CardDeck>{this.renderPostCards()}</CardDeck>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nPostCardDeck.propTypes = propTypes\nPostCardDeck.defaultProps = defaultProps\nexport default PostCardDeck\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport { PageType } from \"components/seo\"\nimport Pagination from \"components/pagination\"\nimport { Container } from \"react-bootstrap\"\nimport PostCardDeck from \"components/post-card-deck\"\n\n\nclass BlogIndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    var blogPostsFeatured = this.props.data.blogPostsFeatured.edges\n    var blogPosts = this.props.data.blogPosts.edges\n    var paginateItems = [].concat(blogPostsFeatured, blogPosts)\n\n    this.state = {\n      isLoading: true,\n      paginateItems: paginateItems,\n      pageOfItems: []\n    }\n\n    // bind function(s) in constructor instead of render\n    this.onChangePage = this.onChangePage.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({ isLoading: false })\n  }\n\n  onChangePage(pageOfItems) {\n    // update state with new page of items\n    this.setState({ pageOfItems: pageOfItems })\n  }\n\n  render() {\n\n    const postsFeatured = []\n    const posts = []\n\n    for (var i = 0; i < this.state.pageOfItems.length; i++ ) {\n      var item = this.state.pageOfItems[i]\n\n      if(item.node.frontmatter.feature) {\n        postsFeatured.push(item)\n      } else {\n        posts.push(item)\n      }\n    }\n\n    return (\n      <Layout>\n        <SEO\n          pathname={this.props.location.pathname}\n          pageType={PageType.BLOG}\n          title=\"Blog\"\n        />\n        <Container>\n          {/* Display featured blog posts as cards that can take the full width of the container */}\n          <PostCardDeck items={postsFeatured} cardClass={\"my-3 shadow\"} cardButtonClass={\"mt-auto btn-xs-block btn-sm-block btn-md-block\"}  />\n\n          {/* Display blog posts as cards in a CardDeck */}\n          <PostCardDeck items={posts} columnsSM={1} columnsMD={1} columnsLG={2} columnsXL={2} cardClass={\"my-3 shadow\"} cardBodyClass={\"d-flex flex-column\"} cardButtonClass={\"mt-auto\"} fillCols />\n\n          {(this.state.isLoading) ? <div /> : <Pagination items={this.state.paginateItems} onChangePage={this.onChangePage} /> }\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n\n        blogPosts:\n          allMarkdownRemark(\n            sort: {order: DESC, fields: [frontmatter___updated]},\n            filter: {fileAbsolutePath: {glob: \"**/content/blog/**/*.md\"},\n            frontmatter: {feature: {eq: false}, show: {eq: true}}}\n          ) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 125, format: HTML)\n              timeToRead\n              fields {\n                slug\n              }\n              frontmatter {\n                categories\n                created(formatString: \"YYYY-MM-DD\")\n                feature\n                image\n                show\n                tags\n                title\n                updated(formatString: \"YYYY-MM-DD\")\n              }\n              parent {\n                ... on File {\n                  sourceInstanceName\n                }\n              }\n            }\n          }\n        }\n\n        blogPostsFeatured: allMarkdownRemark(\n          sort: {order: DESC, fields: [frontmatter___updated]},\n          filter: {fileAbsolutePath: {glob: \"**/content/blog/**/*.md\"},\n          frontmatter: {feature: {eq: true}, show: {eq: true}}}\n          ) {\n          edges {\n            node {\n              id\n              excerpt(pruneLength: 125, format: HTML)\n              timeToRead\n              fields {\n                slug\n              }\n              frontmatter {\n                categories\n                created(formatString: \"YYYY-MM-DD\")\n                feature\n                image\n                show\n                tags\n                title\n                updated(formatString: \"YYYY-MM-DD\")\n              }\n              parent {\n                ... on File {\n                  sourceInstanceName\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={ data => <BlogIndexPage data={data} {...props} /> }\n  />\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\n\nconst propTypes = {\n  author: PropTypes.string,\n  description: PropTypes.string.isRequired,\n  expiration_time: PropTypes.any,\n  image: PropTypes.string.isRequired,\n  locale: PropTypes.string,\n  modified_time: PropTypes.any,\n  published_time: PropTypes.any,\n  section: PropTypes.string,\n  site: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  url: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  author: ``,\n  expiration_time: null,\n  locale: `en_US`,\n  modified_time: null,\n  published_time: null,\n  section: ``,\n  tags: [],\n  type: `website`,\n}\n\nconst Facebook = (props) => {\n\n  const articleMeta = (\n    <>\n      <meta property=\"article:published_time\" content={props.published_time} />\n      {props.modified_time && <meta property=\"article:modified_time\" content={props.modified_time} />}\n      {props.expiration_time && <meta property=\"article:expiration_time\" content={props.expiration_time} />}\n      <meta property=\"article:author\" content={props.author} />\n      <meta property=\"article:section\" content={props.section} />\n      <meta property=\"article:tag\" content={props.tags} />\n    </>\n  )\n\n  return (\n    <Helmet>\n      {/* Opengraph tags */}\n      <meta property=\"og:type\" content={props.type} />\n      <meta property=\"og:title\" content={props.title} />\n      <meta property=\"og:description\" content={props.description} />\n      <meta property=\"og:image\" content={props.image} />\n      <meta property=\"og:image:alt\" content={props.description} />\n      <meta property=\"og:locale\" content={props.locale} />\n      <meta property=\"og:url\" content={props.url} />\n      <meta property=\"og:site_name\" content={props.site} />\n      {props.type === 'article' ? articleMeta : null}\n    </Helmet>\n  )\n}\n\nFacebook.propTypes = propTypes\nFacebook.defaultProps = defaultProps\nexport default Facebook\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\n\nconst propTypes = {\n  description: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  site: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  username: PropTypes.string,\n}\n\nconst defaultProps = {\n  type: `summary_large_image`,\n  username: null,\n\n}\n\nconst Twitter = (props) => {\n  return (\n    <Helmet>\n      <meta name=\"twitter:card\" content={props.type} />\n      <meta name=\"twitter:site\" content={`@${props.site}`} />\n      {props.username && <meta name=\"twitter:creator\" content={`@${props.username}`} />}\n      <meta name=\"twitter:title\" content={props.title} />\n      <meta name=\"twitter:description\" content={props.description} />\n      <meta name=\"twitter:image\" content={props.image} />\n    </Helmet>\n  )\n}\n\nTwitter.propTypes = propTypes\nTwitter.defaultProps = defaultProps\nexport default Twitter","export const PageType = {\n  ARTICLE: \"ARTICLE\",\n  BLOG: \"BLOG\",\n  BLOGPOST: \"BLOGPOST\",\n  BREADCRUMB: \"BREADCRUMB\",\n  WEBPAGE: \"WEBPAGE\",\n}","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport function GetImageUrl(imgName) {\n  const data = useStaticQuery(allImageSharpQuery)\n  const image = data.allImageSharp.edges.find(\n    edge => edge.node.fixed.originalName === imgName\n  )\n  if (!image) {\n    return\n  }\n  return image.node.fixed.src\n}\n\nconst allImageSharpQuery = graphql`\n  query {\n    allImageSharp {\n      edges {\n        node {\n          fixed(width: 1200, height: 630) {\n            originalName\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import { useStaticQuery, graphql } from \"gatsby\"\nimport { GetImageUrl } from \"utils/GetImageUrl\"\n\nexport function GetSchemaOrgAuthor(author) {\n  const data = useStaticQuery(siteInformation)\n\n  const {\n    siteMetadata: { defaultImage, defaultTitle, defaultUrl },\n  } = data.site\n\n  if (author) {\n    return {\n      \"@type\": \"Person\",\n      name: `${author}`,\n      // \"url\": \"https://matthassel.com\",\n    }\n  } else {\n    return {\n      \"@type\": \"Organization\",\n      name: `${defaultTitle}`,\n      url: `${defaultUrl}`,\n      logo: {\n        \"@type\": \"ImageObject\",\n        url: `${defaultUrl}${GetImageUrl(defaultImage)}`,\n      },\n    }\n  }\n}\n\nconst siteInformation = graphql`\n  query {\n    site {\n      ...SiteInformation\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { GetSchemaOrgAuthor } from \"utils/GetSchemaOrgAuthor\"\n\nconst propTypes = {\n  alternativeHeadline: PropTypes.string,\n  author: PropTypes.string,\n  dateCreated: PropTypes.string.isRequired,\n  dateModified: PropTypes.string.isRequired,\n  datePublished: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isFamilyFriendly: PropTypes.bool,\n  language: PropTypes.string,\n  mainEntityOfPage: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgImageUrl: PropTypes.string.isRequired,\n  orgName: PropTypes.string.isRequired,\n  orgUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  alternativeHeadline: ``,\n  author: ``,\n  isFamilyFriendly: true,\n  language: `en-US`,\n}\n\nconst Article = (props) => {\n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            {\n              \"@context\": \"http://schema.org\",\n              \"@type\": \"Article\",\n              \"name\": `${props.headline}`,\n              \"description\": `${props.description}`,\n              \"image\": `${props.image}`,\n              \"url\": `${props.url}`,\n              \"headline\": `${props.headline}`,\n              \"alternativeHeadline\": `${props.alternativeHeadline}`,\n              \"dateCreated\": `${props.dateCreated}`,\n              \"datePublished\": `${props.datePublished}`,\n              \"dateModified\": `${props.dateModified}`,\n              \"inLanguage\": `${props.language}`,\n              \"isFamilyFriendly\": `${props.isFamilyFriendly}`,\n              copyrightYear: `${new Date().getFullYear()}`,\n              // copyrightHolder: GetSchemaOrgAuthor(props.author),\n              author: GetSchemaOrgAuthor(props.author),\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": `${props.orgName}`,\n                \"url\": `${props.orgUrl}`,\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"url\": `${props.orgImageUrl}`,\n                }\n              },\n              \"mainEntityOfPage\": `${props.mainEntityOfPage}`,\n            }  \n          )}\n        </script>\n      </Helmet>\n    </>\n  )\n}\n\nArticle.propTypes = propTypes\nArticle.defaultProps = defaultProps\nexport default Article\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { GetSchemaOrgAuthor } from \"utils/GetSchemaOrgAuthor\"\n\nconst propTypes = {\n  alternativeHeadline: PropTypes.string,\n  author: PropTypes.string,\n  // dateCreated: PropTypes.string.isRequired,\n  // dateModified: PropTypes.string.isRequired,\n  // datePublished: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isFamilyFriendly: PropTypes.bool,\n  language: PropTypes.string,\n  mainEntityOfPage: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgImageUrl: PropTypes.string.isRequired,\n  orgName: PropTypes.string.isRequired,\n  orgUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  alternativeHeadline: ``,\n  author: ``,\n  isFamilyFriendly: true,\n  language: `en-US`,\n}\n\nconst Blog = (props) => {\n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            {\n              \"@context\": \"http://schema.org\",\n              \"@type\": \"Blog\",\n              \"name\": `${props.headline}`,\n              \"description\": `${props.description}`,\n              \"image\": `${props.image}`,\n              \"url\": `${props.url}`,\n              \"headline\": `${props.headline}`,\n              \"alternativeHeadline\": `${props.alternativeHeadline}`,\n              // \"dateCreated\": `${props.dateCreated}`,\n              // \"datePublished\": `${props.datePublished}`,\n              // \"dateModified\": `${props.dateModified}`,\n              \"inLanguage\": `${props.language}`,\n              \"isFamilyFriendly\": `${props.isFamilyFriendly}`,\n              copyrightYear: `${new Date().getFullYear()}`,\n              // copyrightHolder: GetSchemaOrgAuthor(props.author),\n              author: GetSchemaOrgAuthor(props.author),\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": `${props.orgName}`,\n                \"url\": `${props.orgUrl}`,\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"url\": `${props.orgImageUrl}`,\n                }\n              },\n              \"mainEntityOfPage\": `${props.mainEntityOfPage}`,\n            }\n          )}\n        </script>\n      </Helmet>\n    </>\n  )\n}\n\nBlog.propTypes = propTypes\nBlog.defaultProps = defaultProps\nexport default Blog\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { GetSchemaOrgAuthor } from \"utils/GetSchemaOrgAuthor\"\n\nconst propTypes = {\n  alternativeHeadline: PropTypes.string,\n  author: PropTypes.string,\n  dateCreated: PropTypes.string.isRequired,\n  dateModified: PropTypes.string.isRequired,\n  datePublished: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isFamilyFriendly: PropTypes.bool,\n  lanugage: PropTypes.string,\n  mainEntityOfPage: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgImageUrl: PropTypes.string.isRequired,\n  orgName: PropTypes.string.isRequired,\n  orgUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  alternativeHeadline: ``,\n  author: ``,\n  isFamilyFriendly: true,\n  language: `en-US`,\n}\n\nconst BlogPost = (props) => {\n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            {\n              \"@context\":\"http://schema.org\",\n              \"@type\": \"BlogPosting\",\n              \"name\": `${props.name}`,\n              \"description\": `${props.description}`,\n              \"image\": `${props.image}`,\n              \"url\": `${props.url}`,\n              \"headline\": `${props.headline}`,\n              \"alternativeHeadline\": `${props.alternativeHeadline}`,\n              \"dateCreated\": `${props.datePublished}`,\n              \"datePublished\": `${props.datePublished}`,\n              \"dateModified\": `${props.dateModified}`,\n              \"inLanguage\": `${props.language}`,\n              \"isFamilyFriendly\": `${props.isFamilyFriendly}`,\n              \"copyrightYear\": `${new Date().getFullYear()}`,\n              // \"copyrightHolder\": GetSchemaOrgAuthor(props.author),\n              // \"contentLocation\": {\n              //   \"@type\": \"Place\",\n              //   \"name\": \"Delray Beach, FL\"\n              // },\n              \"author\": GetSchemaOrgAuthor(props.author),\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": `${props.orgName}`,\n                \"url\": `${props.orgUrl}`,\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"url\": `${props.orgImageUrl}`,\n                }\n              },\n              // \"sponsor\": {\n              //   \"@type\": \"Organization\",\n              //   \"name\": \"Acme Widgets\",\n              //   \"url\": \"https://example.com\",\n              //   \"logo\": {\n              //     \"@type\": \"ImageObject\",\n              //     \"url\": \"http://www.example.com/logo.png\"\n              //   }\n              // },\n              \"mainEntityOfPage\": `${props.mainEntityOfPage}`,\n              // \"keywords\": [\n              //   \"keyword1\",\n              //   \"keyword2\",\n              //   \"keyword3\",\n              //   \"keyword4\"\n              // ],\n              // \"genre\":[\"SEO\",\"JSON-LD\"],\n              // \"articleSection\": \"Uncategorized posts\",\n              // \"articleBody\": \"Paste the body of your content in here in plaintext\"\n            }  \n          )}\n        </script>\n      </Helmet>\n    </>\n  )\n}\n\nBlogPost.propTypes = propTypes\nBlogPost.defaultProps = defaultProps\nexport default BlogPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\n\nconst propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.string,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    }),\n  ),\n  url: PropTypes.string,\n}\n\nconst defaultProps = {\n  links: [],\n  url: ``,\n}\n\nconst SiteNavigationElement = (props) => {\n  return (\n    <>\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(\n          {\n            \"@context\": \"https://schema.org\",\n            \"@graph\": \n            [\n              props.links.map((link, index) => {\n                return (\n                  {\n                    \"@context\": \"https://schema.org\",\n                    \"@type\":\"SiteNavigationElement\",\n                    \"@id\":`${props.url}#header-nav`,\n                    \"name\": `${link.name}`,\n                    \"url\": `${props.url}${link.link}`\n                  }\n                )\n              })\n            ]\n          }\n        )}\n      </script>\n    </Helmet>\n  </>\n)\n}\n\nSiteNavigationElement.propTypes = propTypes\nSiteNavigationElement.defaultProps = defaultProps\nexport default SiteNavigationElement\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { GetSchemaOrgAuthor } from \"utils/GetSchemaOrgAuthor\"\n\nconst propTypes = {\n  alternativeHeadline: PropTypes.string,\n  author: PropTypes.string,\n  // dateCreated: PropTypes.string.isRequired,\n  // dateModified: PropTypes.string.isRequired,\n  // datePublished: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isFamilyFriendly: PropTypes.bool,\n  language: PropTypes.string,\n  mainEntityOfPage: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  orgImageUrl: PropTypes.string.isRequired,\n  orgName: PropTypes.string.isRequired,\n  orgUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n  alternativeHeadline: ``,\n  author: ``,\n  isFamilyFriendly: true,\n  language: `en-US`,\n}\n\nconst WebPage = (props) => {\n  return (\n    <>\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(\n            {\n              \"@context\": \"http://schema.org\",\n              \"@type\": \"WebPage\",\n              \"name\": `${props.headline}`,\n              \"description\": `${props.description}`,\n              \"image\": `${props.image}`,\n              \"url\": `${props.url}`,\n              \"headline\": `${props.headline}`,\n              \"alternativeHeadline\": `${props.alternativeHeadline}`,\n              // \"dateCreated\": `${props.dateCreated}`,\n              // \"datePublished\": `${props.datePublished}`,\n              // \"dateModified\": `${props.dateModified}`,\n              \"inLanguage\": `${props.language}`,\n              \"isFamilyFriendly\": `${props.isFamilyFriendly}`,\n              copyrightYear: `${new Date().getFullYear()}`,\n              // copyrightHolder: GetSchemaOrgAuthor(props.author),\n              author: GetSchemaOrgAuthor(props.author),\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": `${props.orgName}`,\n                \"url\": `${props.orgUrl}`,\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"url\": `${props.orgImageUrl}`,\n                }\n              },\n              \"mainEntityOfPage\": `${props.mainEntityOfPage}`,\n            }\n          )}\n        </script>\n      </Helmet>\n    </>\n  )\n}\n\nWebPage.propTypes = propTypes\nWebPage.defaultProps = defaultProps\nexport default WebPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\n\nconst propTypes = {\n  name: PropTypes.string,\n  url: PropTypes.string,\n}\n\nconst defaultProps = {\n  name: ``,\n  url: ``,\n}\n\nconst WebSite = (props) => {\n  return (\n    <>\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(\n          {\n            \"@context\": \"http://schema.org\",\n            \"@type\": \"WebSite\",\n            \"name\": `${props.name}`,\n            \"url\": `${props.url}`,\n          }\n        )}\n      </script>\n    </Helmet>\n  </>\n)\n}\n\nWebSite.propTypes = propTypes\nWebSite.defaultProps = defaultProps\nexport default WebSite\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Facebook from \"./Facebook\"\nimport Twitter from \"./Twitter\"\nimport { PageType } from \"./PageType\"\nimport { GetImageUrl } from \"utils/GetImageUrl\"\nimport {\n  Article,\n  Blog,\n  BlogPost,\n  SiteNavigationElement,\n  WebPage,\n  WebSite\n} from \"./SchemaOrgType\"\n\nconst propTypes = {\n  author: PropTypes.string,\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        defaultDescription: PropTypes.string.isRequired,\n        defaultImage: PropTypes.string.isRequired,\n        defaultTitle: PropTypes.string.isRequired,\n        defaultUrl: PropTypes.string.isRequired,\n        language: PropTypes.string.isRequired,\n        social: PropTypes.shape({\n          facebook: PropTypes.shape({\n            language: PropTypes.string,\n            name: PropTypes.string.isRequired,\n            site: PropTypes.string,\n          }),\n          twitter: PropTypes.shape({\n            name: PropTypes.name,\n            site: PropTypes.string.isRequired,\n          }),\n        }),\n        url: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n  dateCreated: PropTypes.string,\n  dateModified: PropTypes.string,\n  datePublished: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  node: PropTypes.any,\n  pathname: PropTypes.string,\n  pageType: PropTypes.string,\n  title: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nconst defaultProps = {\n  author: ``,\n  description: ``,\n  image: ``,\n  keywords: [],\n  node: {},\n  pathname: ``,\n  pageType: PageType.WEBPAGE,\n  title: ``,\n  article: false,\n}\n\nconst SEO = (props) => {\n\n  const {\n    siteMetadata: {\n      defaultDescription,\n      defaultImage,\n      defaultTitle,\n      defaultUrl,\n      language,\n      links,\n      social,\n      url,\n    },\n  } = props.data.site\n\n  const seo = {\n    description: props.description || defaultDescription,\n    image: props.image || defaultImage, // node image or props.image or (lastly) defaultImage \n    title: props.title ? `${props.title} | ${defaultTitle}` : `${defaultTitle} | ${defaultDescription}`,\n    url: `${url}${props.pathname || ''}`\n  }\n\n  const renderSchemaOrgSwitch = (pageType) => {\n    switch(pageType) {\n      case PageType.ARTICLE:\n        return (\n          <Article\n            dateCreated={props.dateCreated}\n            dateModified={props.dateModified}\n            datePublished={props.datePublished}\n            description={seo.description}\n            headline={seo.title}\n            image={`${url}${GetImageUrl(seo.image)}`}\n            mainEntityOfPage={seo.url}\n            name={seo.title}\n            orgImageUrl={`${url}${GetImageUrl(defaultImage)}`}\n            orgName={defaultTitle}\n            orgUrl={defaultUrl}\n            url={seo.url}\n          />\n        )\n      case PageType.BLOG:\n        return (\n          <Blog\n            // dateCreated={props.dateCreated}\n            // dateModified={props.dateModified}\n            // datePublished={props.datePublished}\n            description={seo.description}\n            headline={seo.title}\n            image={`${url}${GetImageUrl(seo.image)}`}\n            mainEntityOfPage={seo.url}\n            name={seo.title}\n            orgImageUrl={`${url}${GetImageUrl(defaultImage)}`}\n            orgName={defaultTitle}\n            orgUrl={defaultUrl}\n            url={seo.url}\n          />\n        )\n      case PageType.BLOGPOST:\n        return (\n          <BlogPost\n            dateCreated={props.dateCreated}\n            dateModified={props.dateModified}\n            datePublished={props.datePublished}\n            description={seo.description}\n            headline={seo.title}\n            image={`${url}${GetImageUrl(seo.image)}`}\n            mainEntityOfPage={seo.url}\n            name={seo.title}\n            orgImageUrl={`${url}${GetImageUrl(defaultImage)}`}\n            orgName={defaultTitle}\n            orgUrl={defaultUrl}\n            url={seo.url}\n          />\n        )\n      default:\n        return (\n          <WebPage\n            // dateCreated={props.dateCreated}\n            // dateModified={props.dateModified}\n            // datePublished={props.datePublished}\n            description={seo.description}\n            headline={seo.title}\n            image={`${url}${GetImageUrl(seo.image)}`}\n            mainEntityOfPage={seo.url}\n            name={seo.title}\n            orgImageUrl={`${url}${GetImageUrl(defaultImage)}`}\n            orgName={defaultTitle}\n            orgUrl={defaultUrl}\n            url={seo.url}\n          />          \n        )\n    }\n\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{seo.title}</title>\n        <html lang={language} />\n        <meta name=\"description\" content={seo.description} />\n        <meta name=\"image\" content={`${url}${GetImageUrl(seo.image)}`} />\n        {props.keywords.length > 0 ? <meta name=\"keywords\" content={props.keywords.join(`, `)} /> : ''}\n      </Helmet>\n\n      <Facebook\n        description={seo.description}\n        image={`${url}${GetImageUrl(seo.image)}`}\n        locale={social.facebook.language}\n        site={social.facebook.name}\n        title={seo.title}\n        type={props.article ? 'article' : 'website'}\n        url={seo.url}\n      />\n\n      <Twitter\n        description={seo.description}\n        image={`${url}${GetImageUrl(seo.image)}`}\n        site={social.twitter.site}\n        title={seo.title}\n      />\n\n      <WebSite name={defaultTitle} url={defaultUrl} />\n      <SiteNavigationElement links={links} url={defaultUrl} />\n      {renderSchemaOrgSwitch(props.pageType)}\n    </>\n  )\n}\n\nSEO.propTypes = propTypes\nSEO.defaultProps = defaultProps\nexport default props => (\n  <StaticQuery\n    query={query}\n    render={data => <SEO data={data} {...props} />}\n  />\n)\n\nconst query = graphql`\n  query {\n    site {\n      ...SiteInformation\n    }\n  }\n`\n","import { default as SEO } from \"./seo\"\n\nimport Facebook from \"./Twitter\"\nimport { PageType } from \"./PageType\"\nimport Twitter from \"./Facebook\"\n\nexport {\n  Facebook,\n  PageType,\n  Twitter\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Img from \"gatsby-image\"\n\nconst Image = ({ className, imgName }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allImageSharp {\n          edges {\n            node {\n              fluid {\n                ...GatsbyImageSharpFluid\n                originalName\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.allImageSharp.edges.find(\n        edge => edge.node.fluid.originalName === imgName\n      )\n      if (!image) {\n        return null\n      }\n      return (\n        <Img\n          fluid={image.node.fluid}\n          className={`rounded` + className}\n          style={imgStyle}\n        />\n      )\n    }}\n  />\n)\nexport default Image\n\nImage.propTypes = {\n  imgName: PropTypes.string,\n}\n\nImage.defaultProps = {\n  imgName: '',\n}\n\nconst imgStyle = {\n  maxHeight: `360px`\n}\n"],"sourceRoot":""}