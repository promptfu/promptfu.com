{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Button.js","webpack:///./src/pages/wiki/categories/index.js"],"names":["Button","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","prefix","classes","href","createElement","disabled","Component","displayName","defaultProps","CategoriesPage","data","group","allMarkdownRemark","title","site","siteMetadata","map","category","key","fieldValue","Link","to","slugify","totalCount","pageQuery"],"mappings":"4FAAA,8FAWIA,EAAS,IAAMC,YAAW,SAAUC,EAAMC,GAC5C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAOJ,EAAKI,KACZC,EAASL,EAAKK,OACdC,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAOR,EAAKQ,KACZC,EAAKT,EAAKS,GACVC,EAAQ,YAA8BV,EAAM,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,OAEpHW,EAAS,YAAmBT,EAAU,OACtCU,EAAU,IAAWN,EAAWK,EAAQN,GAAU,SAAUF,GAAWQ,EAAS,IAAMR,EAASI,GAASI,EAAS,SAAUP,GAAQO,EAAS,IAAMP,GAEtJ,GAAIM,EAAMG,KACR,OAAoB,IAAMC,cAAc,IAAY,YAAS,GAAIJ,EAAO,CACtED,GAAIA,EACJR,IAAKA,EACLK,UAAW,IAAWM,EAASF,EAAMK,UAAY,eAIjDd,IACFS,EAAMT,IAAMA,GAGVO,EACFE,EAAMF,KAAOA,EACHC,IACVC,EAAMF,KAAO,UAGf,IAAIQ,EAAYP,GAAM,SACtB,OAAoB,IAAMK,cAAcE,EAAW,YAAS,GAAIN,EAAO,CACrEJ,UAAWM,QAGfd,EAAOmB,YAAc,SACrBnB,EAAOoB,aA3CY,CACjBf,QAAS,UACTE,QAAQ,EACRU,UAAU,GAyCG,O,oCClDf,+LA2DeI,UAjDQ,SAAC,GAAD,QACrBC,KACuBC,EAFF,EAEnBC,kBAAqBD,MAEHE,EAJC,EAGnBC,KACEC,aAAgBF,MAJC,OAQrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQA,MAAOA,IACf,wBAAIjB,UAAU,eAAd,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,eACZe,EAAMK,KAAI,SAAAC,GAAQ,OACjB,kBAAC,IAAD,CAAQC,IAAKD,EAASE,WAAY1B,QAAQ,OAAOM,GAAIqB,OAAMC,GAAE,oBAAsBC,IAAQL,EAASE,YAAvC,IAAuDrB,KAAK,OAAOF,UAAU,OACvIqB,EAASE,WADZ,IAC6B,kBAAC,IAAD,CAAO1B,QAAQ,SAASwB,EAASM,sBA8BrE,IAAMC,EAAS","file":"component---src-pages-wiki-categories-index-js-d8a759a5c873f4883b02.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nimport slugify from \"slugify\"\n\nimport Layout from \"components/layout\"\nimport { Badge, Button, Container, Row, Col } from \"react-bootstrap\"\n\nconst CategoriesPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout>\n    <Container>\n      <Row>\n        <Col>\n          <Helmet title={title} />\n          <h1 className=\"text-center\">Categories</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"text-center\">\n            {group.map(category => (\n              <Button key={category.fieldValue} variant=\"info\" as={Link} to={`/wiki/categories/${slugify(category.fieldValue)}/`} type=\"null\" className=\"m-1\">\n                {category.fieldValue}&nbsp;<Badge variant=\"light\">{category.totalCount}</Badge>\n              </Button>\n            ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </Layout>\n)\n\nCategoriesPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default CategoriesPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {glob: \"**/content/wiki/**/*.md\"}},\n      limit: 2000) {\n        group(field: frontmatter___categories) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`"],"sourceRoot":""}