{"version":3,"sources":["webpack:///./src/pages/blog/tags/index.js","webpack:///./node_modules/react-bootstrap/esm/Button.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","className","map","tag","key","fieldValue","variant","as","Link","to","slugify","type","totalCount","pageQuery","Button","forwardRef","_ref","ref","bsPrefix","size","active","block","props","prefix","classes","href","createElement","disabled","Component","displayName","defaultProps"],"mappings":"4FAAA,+LA2DeA,UAjDE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,OAQf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQA,MAAOA,IACf,wBAAIG,UAAU,eAAd,UAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,eACZL,EAAMM,KAAI,SAAAC,GAAG,OACZ,kBAAC,IAAD,CAAQC,IAAKD,EAAIE,WAAYC,QAAQ,OAAOC,GAAIC,OAAMC,GAAE,cAAgBC,IAAQP,EAAIE,YAA5B,IAA4CM,KAAK,OAAOV,UAAU,OACvHE,EAAIE,WADP,IACwB,kBAAC,IAAD,CAAOC,QAAQ,SAASH,EAAIS,sBA8B3D,IAAMC,EAAS,c,kCC7DtB,8FAWIC,EAAS,IAAMC,YAAW,SAAUC,EAAMC,GAC5C,IAAIC,EAAWF,EAAKE,SAChBZ,EAAUU,EAAKV,QACfa,EAAOH,EAAKG,KACZC,EAASJ,EAAKI,OACdnB,EAAYe,EAAKf,UACjBoB,EAAQL,EAAKK,MACbV,EAAOK,EAAKL,KACZJ,EAAKS,EAAKT,GACVe,EAAQ,YAA8BN,EAAM,CAAC,WAAY,UAAW,OAAQ,SAAU,YAAa,QAAS,OAAQ,OAEpHO,EAAS,YAAmBL,EAAU,OACtCM,EAAU,IAAWvB,EAAWsB,EAAQH,GAAU,SAAUd,GAAWiB,EAAS,IAAMjB,EAASe,GAASE,EAAS,SAAUJ,GAAQI,EAAS,IAAMJ,GAEtJ,GAAIG,EAAMG,KACR,OAAoB,IAAMC,cAAc,IAAY,YAAS,GAAIJ,EAAO,CACtEf,GAAIA,EACJU,IAAKA,EACLhB,UAAW,IAAWuB,EAASF,EAAMK,UAAY,eAIjDV,IACFK,EAAML,IAAMA,GAGVN,EACFW,EAAMX,KAAOA,EACHJ,IACVe,EAAMX,KAAO,UAGf,IAAIiB,EAAYrB,GAAM,SACtB,OAAoB,IAAMmB,cAAcE,EAAW,YAAS,GAAIN,EAAO,CACrErB,UAAWuB,QAGfV,EAAOe,YAAc,SACrBf,EAAOgB,aA3CY,CACjBxB,QAAS,UACTc,QAAQ,EACRO,UAAU,GAyCG","file":"component---src-pages-blog-tags-index-js-d7623b1a3e8b1072dabb.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\n\nimport slugify from \"slugify\"\n\nimport Layout from \"components/layout\"\nimport { Badge, Button, Container, Row, Col } from \"react-bootstrap\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout>\n    <Container>\n      <Row>\n        <Col>\n          <Helmet title={title} />\n          <h1 className=\"text-center\">Tags</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div className=\"text-center\">\n            {group.map(tag => (\n              <Button key={tag.fieldValue} variant=\"info\" as={Link} to={`/blog/tags/${slugify(tag.fieldValue)}/`} type=\"null\" className=\"m-1\">\n                {tag.fieldValue}&nbsp;<Badge variant=\"light\">{tag.totalCount}</Badge>\n              </Button>\n            ))}\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {glob: \"**/content/blog/**/*.md\"}},\n      limit: 2000) {\n        group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}