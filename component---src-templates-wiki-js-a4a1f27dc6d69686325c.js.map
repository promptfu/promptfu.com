{"version":3,"sources":["webpack:///./src/templates/wiki.js"],"names":["WikiPost","props","state","render","this","data","markdownRemark","slug","fields","frontmatter","author","categories","created","description","image","tags","title","updated","html","sourceInstanceName","parent","tableOfContents","timeToRead","dateCreated","dateModified","datePublished","pathname","location","pageType","PageType","ARTICLE","className","editable","pathPrefix","imgName","length","content","React","Component","pageQuery"],"mappings":"0PAmBMA,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAEKC,MAAQ,GAHI,E,oCAMnBC,OAAA,WAAU,IAAD,EAmBHC,KAAKH,MAAMI,KAjBbC,eACYC,EAHP,EAGHC,OAAUD,KAHP,IAIHE,YACEC,EALC,EAKDA,OACAC,EANC,EAMDA,WACAC,EAPC,EAODA,QACAC,EARC,EAQDA,YACAC,EATC,EASDA,MACAC,EAVC,EAUDA,KACAC,EAXC,EAWDA,MACAC,EAZC,EAYDA,QAEFC,EAdG,EAcHA,KACUC,EAfP,EAeHC,OAAUD,mBACVE,EAhBG,EAgBHA,gBACAC,EAjBG,EAiBHA,WAIJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,YAAaX,EACbY,aAAcP,EACdQ,cAAeb,EACfC,YAAaA,EACbC,MAAOA,EACPY,SAAUtB,KAAKH,MAAM0B,SAASD,SAC9BE,SAAUC,IAASC,QACnBd,MAAOA,IAET,kBAAC,IAAD,CAAWe,UAAU,aACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQf,MAAOA,MAGnB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEN,OAAQA,EACRE,QAASA,EACToB,UAAU,EACVC,WAAYd,EACZZ,KAAMA,EACNQ,KAAMA,EACNO,WAAYA,EACZN,MAAOA,EACPC,QAASA,MAIf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,QAASpB,MAGpB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACuB,OAApBO,GAC0B,IAA3BA,EAAgBc,OAAe,KAC7B,kBAAC,IAAD,CAAiBd,gBAAiBA,MAIxC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASe,QAASlB,MAGtB,kBAAC,IAAD,CAAKa,UAAU,oBACb,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAMxB,KAAMA,OAIlB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0B,WAAYd,EACZR,WAAYA,MAIlB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUJ,KAAMA,EAAMS,MAAOA,S,GAhGpBqB,IAAMC,WAyGdtC,YAER,IAAMuC,EAAS","file":"component---src-templates-wiki-js-a4a1f27dc6d69686325c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport { PageType } from \"components/seo\"\nimport { Container, Row, Col } from \"react-bootstrap\"\n\nimport {\n  Categories,\n  Comments,\n  Content,\n  Edit,\n  Header,\n  Image,\n  Meta,\n  TableOfContents,\n} from \"components/post\"\n\nclass WikiPost extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  render() {\n    const {\n      markdownRemark: {\n        fields: { slug },\n        frontmatter: {\n          author,\n          categories,\n          created,\n          description,\n          image,\n          tags,\n          title,\n          updated,\n        },\n        html,\n        parent: { sourceInstanceName },\n        tableOfContents,\n        timeToRead,\n      },\n    } = this.props.data\n\n    return (\n      <Layout>\n        <SEO\n          dateCreated={created}\n          dateModified={updated}\n          datePublished={created}\n          description={description}\n          image={image}\n          pathname={this.props.location.pathname}\n          pageType={PageType.ARTICLE}\n          title={title}\n        />\n        <Container className=\"shadow-lg\">\n          <Row>\n            <Col>\n              <Header title={title} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Meta\n                author={author}\n                created={created}\n                editable={true}\n                pathPrefix={sourceInstanceName}\n                slug={slug}\n                tags={tags}\n                timeToRead={timeToRead}\n                title={title}\n                updated={updated}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Image imgName={image} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {tableOfContents === null ||\n              tableOfContents.length === 0 ? null : (\n                <TableOfContents tableOfContents={tableOfContents} />\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Content content={html} />\n            </Col>\n          </Row>\n          <Row className=\"my-5 text-center\">\n            <Col>\n              <span>\n                <Edit slug={slug} />\n              </span>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Categories\n                pathPrefix={sourceInstanceName}\n                categories={categories}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Comments slug={slug} title={title} />\n            </Col>\n          </Row>\n        </Container>\n      </Layout>\n    )\n  }\n}\n\nexport default WikiPost\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      tableOfContents\n      timeToRead\n      fields {\n        slug\n      }\n      frontmatter {\n        author\n        categories\n        created(formatString: \"YYYY-MM-DD\")\n        description\n        feature\n        image\n        show\n        tags\n        title\n        updated(formatString: \"YYYY-MM-DD\")\n      }\n      parent {\n        ... on File {\n          sourceInstanceName\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}